@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Light theme variables */
    --background: 0 0% 100%;
    --foreground: 222 47% 11%;
    --card: 0 0% 98%;
    --card-foreground: 222 47% 11%;
    --popover: 0 0% 98%;
    --popover-foreground: 222 47% 11%;
    --primary: 260 80% 50%;
    --primary-rgb: 102, 51, 204;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222 47% 11%;
    --muted: 210 40% 96%;
    --muted-foreground: 215 16% 47%;
    --accent: 260 80% 50%;
    --accent-foreground: 222 47% 11%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;
    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 260 80% 50%;
    --radius: 1rem;
  }

  .dark {
    /* Dark theme variables (GitHub Copilot inspired) */
    --background: 225 23% 10%;
    --foreground: 213 31% 91%;
    --card: 224 25% 12%;
    --card-foreground: 213 31% 91%;
    --popover: 224 25% 12%;
    --popover-foreground: 213 31% 91%;
    --primary: 260 80% 70%;
    --primary-rgb: 179, 136, 255;
    --primary-foreground: 213 31% 91%;
    --secondary: 224 25% 18%;
    --secondary-foreground: 213 31% 91%;
    --muted: 224 25% 16%;
    --muted-foreground: 215 20% 65%;
    --accent: 260 80% 60%;
    --accent-foreground: 213 31% 91%;
    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;
    --border: 224 25% 18%;
    --input: 224 25% 18%;
    --ring: 260 80% 70%;
  }

  /* Theme transition class */
  .theme-transition {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow,
      transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 500ms;
  }

  /* Prevent transition on page load */
  .theme-transition * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow,
      transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 500ms;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Animation utilities */
@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

.animate-blob {
  animation: blob 7s infinite;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

/* macOS inspired styles */
.mac-card {
  @apply bg-card/80 backdrop-blur-md border border-border shadow-xl;
  box-shadow: 0 10px 30px -10px rgba(0, 0, 0, 0.3);
}

.mac-button {
  @apply rounded-full bg-secondary/80 backdrop-blur-sm border border-border px-6 py-2 transition-all duration-300 hover:bg-primary/20 hover:border-primary/30;
}

.mac-icon-button {
  @apply rounded-full bg-secondary/80 backdrop-blur-sm border border-border p-2 transition-all duration-300 hover:bg-primary/20 hover:border-primary/30;
}

.mac-window {
  @apply rounded-xl bg-card/80 backdrop-blur-md border border-border shadow-xl overflow-hidden;
}

.mac-window-header {
  @apply flex items-center p-3 bg-secondary/50 border-b border-border/50;
}

.mac-window-controls {
  @apply flex space-x-2;
}

.mac-window-control {
  @apply w-3 h-3 rounded-full;
}

.mac-window-close {
  @apply bg-red-500;
}

.mac-window-minimize {
  @apply bg-yellow-500;
}

.mac-window-maximize {
  @apply bg-green-500;
}

.mac-dock {
  @apply flex items-center justify-center space-x-2 py-2 px-4 rounded-full bg-secondary/50 backdrop-blur-md border border-border;
}

.mac-dock-item {
  @apply w-10 h-10 rounded-full bg-primary/20 flex items-center justify-center transition-all duration-300 hover:scale-110;
}

.glass-effect {
  @apply bg-white/5 backdrop-blur-md border border-border rounded-2xl;
}

.bg-grid-white\/\[0\.02\] {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgb(255 255 255 / 0.02)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e");
}

.dark .bg-grid-white\/\[0\.02\] {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgb(255 255 255 / 0.02)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e");
}

.light .bg-grid-white\/\[0\.02\] {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgb(0 0 0 / 0.02)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e");
}

/* Glow effects */
.glow {
  position: relative;
}

.glow::after {
  content: "";
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  background: radial-gradient(circle at center, var(--tw-gradient-from) 0%, transparent 70%);
  opacity: 0.15;
  z-index: -1;
  filter: blur(15px);
}

.glow-primary::after {
  --tw-gradient-from: theme("colors.primary.DEFAULT");
}

.glow-accent::after {
  --tw-gradient-from: theme("colors.accent.DEFAULT");
}

/* Add this to the end of your globals.css file */
@keyframes spin-slow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-spin-slow {
  animation: spin-slow 10s linear infinite;
}

/* Fluid typography */
.fluid-text-sm {
  font-size: clamp(0.875rem, 0.8rem + 0.375vw, 1rem);
}

.fluid-text-base {
  font-size: clamp(1rem, 0.925rem + 0.375vw, 1.125rem);
}

.fluid-text-lg {
  font-size: clamp(1.125rem, 1rem + 0.625vw, 1.25rem);
}

.fluid-text-xl {
  font-size: clamp(1.25rem, 1.125rem + 0.625vw, 1.5rem);
}

.fluid-text-2xl {
  font-size: clamp(1.5rem, 1.25rem + 1.25vw, 1.875rem);
}

.fluid-text-3xl {
  font-size: clamp(1.875rem, 1.5rem + 1.875vw, 2.25rem);
}

.fluid-text-4xl {
  font-size: clamp(2.25rem, 1.75rem + 2.5vw, 3rem);
}

.fluid-text-5xl {
  font-size: clamp(3rem, 2.25rem + 3.75vw, 4rem);
}

.fluid-text-6xl {
  font-size: clamp(3.75rem, 2.75rem + 5vw, 5rem);
}

/* Geometric shapes */
.geometric-shape {
  position: absolute;
  opacity: 0.1;
  z-index: -1;
}

.geometric-circle {
  border-radius: 50%;
}

.geometric-square {
  border-radius: 0;
}

.geometric-triangle {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

.geometric-hexagon {
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}

/* Gradient text */
.gradient-text {
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  background-image: linear-gradient(to right, hsl(var(--primary)), hsl(var(--accent)));
}

/* Parallax effect */
.parallax {
  transform-style: preserve-3d;
  perspective: 1000px;
}

.parallax-layer {
  transform: translateZ(0);
  transition: transform 0.1s;
  will-change: transform;
}

/* Mobile optimizations */
@media (max-width: 768px) {
  .fluid-text-6xl {
    font-size: clamp(2.5rem, 2rem + 2.5vw, 3.5rem);
  }

  /* Adjust social presence section on mobile to avoid overlap */
  section[aria-label="Hero section"] .container {
    padding-bottom: 6rem;
  }
}

